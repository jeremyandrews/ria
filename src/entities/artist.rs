//! SeaORM Entity. Generated by sea-orm-codegen 0.10.0

use sea_orm::entity::prelude::*;

use crate::database::{ArtistType, Gender};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "artist")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub aid: i32,
    pub name: String,
    pub sort_name: Option<String>,
    pub artist_type: Option<ArtistType>,
    pub gender: Option<Gender>,
    pub area: Option<String>,
    pub disambiguation_comment: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::audioartist::Entity")]
    Audioartist,
}

impl Related<super::audioartist::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Audioartist.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
