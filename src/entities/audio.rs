//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "audio")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub audio_id: i32,
    #[sea_orm(unique)]
    pub uri: String,
    pub path: String,
    pub name: String,
    pub extension: String,
    pub format: String,
    pub duration: i32,
    pub channels: i32,
    pub bits: i32,
    pub hertz: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::audio_artist::Entity")]
    AudioArtist,
    #[sea_orm(has_many = "super::audio_tag::Entity")]
    AudioTag,
}

impl Related<super::audio_artist::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AudioArtist.def()
    }
}

impl Related<super::audio_tag::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AudioTag.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
